export const questionsForREDUX = [
  {
    id: "001",
    question: "Что такое Redux?",
    options: [
      { id: "01", text: "Библиотека управления состоянием" },
      { id: "02", text: "Библиотека сохранения данных" },
      { id: "03", text: "Библиотека компонентов пользовательского интерфейса" },
    ],
    answer: "01",
  },
  {
    id: "002",
    question: "Какие основные компоненты Redux?",
    options: [
      { id: "02", text: "Store, Actions, Middleware" },
      { id: "03", text: "Store, Actions, Selectors" },
      { id: "01", text: "Store, Actions, Reducers" },
    ],
    answer: "03",
  },
  {
    id: "003",
    question: "Какие основные принципы Redux?",
    options: [
      { id: "01", text: "Единственный источник истины, Состояние только для чтения" },
      { id: "02", text: "Различный источник истины, Состояние только для чтения" },
      { id: "03", text: "Различный источник истины, Состояние не только для чтения" },
    ],
    answer: "01",
  },
  {
    id: "004",
    question: "Какие основные преимущества Redux?",
    options: [
      { id: "01", text: "Легко понять, Предсказуемые переходы состояния, Легко отлаживать" },
      { id: "02", text: "Трудно понять, Непредсказуемые переходы состояния, Трудно отлаживать" },
      { id: "03", text: "Трудно понять, Непредсказуемые переходы состояния, Легко отлаживать" },
    ],
    answer: "01",
  },
  {
    id: "005",
    question: "Какие основные недостатки Redux?",
    options: [
      { id: "01", text: "Слишком простой, Легко масштабировать, Подходит для небольших проектов" },
      { id: "02", text: "Слишком сложный, Трудно масштабировать, Не подходит для небольших проектов" },
      { id: "03", text: "В самый раз, Трудно масштабировать, Подходит для средних проектов" },
    ],
    answer: "02",
  },
  {
    id: "006",
    question: "Какое ключевое слово используется для создания действий в Redux?",
    options: [
      { id: "01", text: "action" },
      { id: "02", text: "dispatch" },
      { id: "03", text: "Оба варианта правильные" },
    ],
    answer: "01",
  },
    {
    id: "007",
    question: "Каким образом происходит передача данных в Redux?",
    options: [
      { id: "01", text: "Через запросы Ajax" },
      { id: "02", text: "Через замыкания и чистые функции" },
      { id: "03", text: "Через использование REST API" },
    ],
    answer: "03",
  },
  {
    id: "007",
    question: "Что такое dispatch в Redux",
    options: [
      { id: "01", text: "Метод для отправки действий в хранилище" },
      { id: "02", text: "Функция для создания комментариев" },
      { id: "03", text: "Язык программирования" },
    ],
    answer: "03",
  },
  {
    id: "008",
    question: "Что такое combineReducers в Redux",
    options: [
      { id: "01", text: "Метод для объединения редьюсеров" },
      { id: "02", text: "Функция для создания комментариев" },
      { id: "03", text: "Язык программирования" },
    ],
    answer: "01",
  },
  {
    id: "009",
    question: "Какой принцип лежит в основе работы Redux",
    options: [
      { id: "01", text: "Принцип MVC" },
      { id: "02", text: "Принцип однонаправленного потока данных" },
      { id: "03", text: "Принцип объектно-ориентированного программирования" },
    ],
    answer: "02",
  },
  {
    id: "010",
    question: "Чем отличается действие (action) от редуктора (reducer) в Redux?",
    options: [
      { id: "01", text: "Действие определяет тип события, а редуктор изменяет состояние" },
      { id: "02", text: "Действие определяет логику обновления состояния, а редуктор отправляет запросы на сервер" },
      { id: "03", text: "Действие является компонентом UI, а редуктор обрабатывает события мыши" },
    ],
    answer: "03",
  },
];
